From a69d168760f4816c4c9dd704ac3986004bbbf8ae Mon Sep 17 00:00:00 2001
From: Milan Vukov <mvukov@gmail.com>
Date: Mon, 1 Aug 2022 15:28:35 +0800
Subject: [PATCH 2/3] fix boost::placeholders namespace

---
 clients/roscpp/include/ros/timer_manager.h       | 6 +++---
 clients/roscpp/src/libros/connection_manager.cpp | 2 ++
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/clients/roscpp/include/ros/timer_manager.h b/clients/roscpp/include/ros/timer_manager.h
index a938ae6d5..aba67f2af 100644
--- a/clients/roscpp/include/ros/timer_manager.h
+++ b/clients/roscpp/include/ros/timer_manager.h
@@ -341,7 +341,7 @@ int32_t TimerManager<T, D, E>::add(const D& period, const boost::function<void(c
     {
       boost::mutex::scoped_lock lock(waiting_mutex_);
       waiting_.push_back(info->handle);
-      waiting_.sort(boost::bind(&TimerManager::waitingCompare, this, _1, _2));
+      waiting_.sort(boost::bind(&TimerManager::waitingCompare, this, boost::placeholders::_1, boost::placeholders::_2));
     }
 
     new_timer_ = true;
@@ -408,7 +408,7 @@ void TimerManager<T, D, E>::schedule(const TimerInfoPtr& info)
 
     waiting_.push_back(info->handle);
     // waitingCompare requires a lock on the timers_mutex_
-    waiting_.sort(boost::bind(&TimerManager::waitingCompare, this, _1, _2));
+    waiting_.sort(boost::bind(&TimerManager::waitingCompare, this, boost::placeholders::_1, boost::placeholders::_2));
   }
 
   new_timer_ = true;
@@ -482,7 +482,7 @@ void TimerManager<T, D, E>::setPeriod(int32_t handle, const D& period, bool rese
     // In this case, let next_expected be updated only in updateNext
     
     info->period = period;
-    waiting_.sort(boost::bind(&TimerManager::waitingCompare, this, _1, _2));
+    waiting_.sort(boost::bind(&TimerManager::waitingCompare, this, boost::placeholders::_1, boost::placeholders::_2));
   }
 
   new_timer_ = true;
diff --git a/clients/roscpp/src/libros/connection_manager.cpp b/clients/roscpp/src/libros/connection_manager.cpp
index 19fdb90cc..7f4a1ce07 100644
--- a/clients/roscpp/src/libros/connection_manager.cpp
+++ b/clients/roscpp/src/libros/connection_manager.cpp
@@ -40,6 +40,8 @@
 namespace ros
 {
 
+using namespace boost::placeholders;
+
 const ConnectionManagerPtr& ConnectionManager::instance()
 {
   static ConnectionManagerPtr connection_manager = boost::make_shared<ConnectionManager>();
-- 
2.36.0

